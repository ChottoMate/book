import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.23'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.23'
	id 'org.flywaydb.flyway' version '8.0.0'
	id 'nu.studer.jooq' version '8.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.flywaydb:flyway-mysql'
	implementation "org.flywaydb:flyway-core"
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.jooq:jooq'
	runtimeOnly 'com.mysql:mysql-connector-j'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	jooqGenerator "com.mysql:mysql-connector-j"
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

flyway {
	url = "jdbc:mysql://127.0.0.1:3306/book"
	user = System.getenv("DB_USER")
	password = System.getenv("DB_PASSWORD")
}

jooq {
	configurations {
		main {
			generationTool {
				jdbc {
					driver = "com.mysql.cj.jdbc.Driver"
					url = "jdbc:mysql://127.0.0.1:3306/book"
					user = System.getenv("DB_USER")
					password = System.getenv("DB_PASSWORD")
				}
				generator {

				}
			}
		}
	}

}
